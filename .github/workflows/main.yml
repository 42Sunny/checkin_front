# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Create env file
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          REACT_APP_AUTH_KEY: ${{ secrets.REACT_APP_AUTH_KEY }}
          REACT_APP_VERSION: ${{ secrets.REACT_APP_VERSION }}
          REACT_APP_SLACK_URL: ${{ secrets.REACT_APP_SLACK_URL }}
          REACT_APP_X_42CADET_AUTH: ${{ secrets.REACT_APP_X_42CADET_AUTH }}

        run: |
          touch .env.alpha
          echo REACT_APP_API_URL="$REACT_APP_API_URL" >> .env.alpha
          echo REACT_APP_AUTH_KEY="$REACT_APP_AUTH_KEY" >> .env.alpha
          echo REACT_APP_VERSION="$REACT_APP_VERSION" >> .env.alpha
          echo REACT_APP_SLACK_URL="$REACT_APP_SLACK_URL" >> .env.alpha
          echo REACT_APP_X_42CADET_AUTH="$REACT_APP_X_42CADET_AUTH" >> .env.alpha
          cat .env.alpha | head -n 1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://npm.pkg.github.com"

      - name: Install Dependencies
        run: yarn
        env:
          CI: true

      - name: Build
        run: yarn alpha_build

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
            --recursive \
            --region ap-northeast-2 \
            build s3://checkin.alpha.42seoul.io

      - name: invalidate
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
          PATHS: '/*'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}